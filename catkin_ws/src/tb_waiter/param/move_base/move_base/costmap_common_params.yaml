### Common Configuration (local_costmap) & (global_costmap) ###
# Reference: http://www.ros.org/wiki/navigation/Tutorials/RobotSetup
# Reference: http://wiki.ros.org/costmap_2d
# The navigation stack uses costmaps to store information about obstacles in the world. 
# In order to do this properly, we'll need to point the costmaps at the sensor topics they should listen to for updates. 

max_obstacle_height: 0.60 # maximum height of any obstacle to be inserted into the costmap in meters. This parameter should be set to be slightly higher than robot height.
obstacle_range: 2.5       # maximum range sensor reading that will result in an obstacle put into costmap. (Only update its map about obstacles within "x" m. of base)
raytrace_range: 3.0       # range to which we will raytrace freespace given a sensor reading. Robot will attempt to clear out space in front of it up to "x" m away given info.
robot_radius: 0.18        # radius of kobuki-base in meters.
inflation_radius: 0.50    # maximum distance from obstacles at which a cost should be incurred. 
                          # robot will treat all paths that stay "x" m. or more away from obstacles as having equal obstacle cost.

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan (kinect)
map_type: voxel
origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: false


observation_sources: scan bump # Defines a list of sensors that are going to be passing information to the costmap separated by spaces.

#This line sets parameters on a scan. The "frame_name" parameter should be set to the name of the coordinate frame of the sensor, the "data_type" parameter should be set to LaserScan or PointCloud depending on which message the topic uses, and the "topic_name" should be set to the name of the topic that the sensor publishes data on.

scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.35}
bump: {data_type: PointCloud2, topic: mobile_base/sensors/bumper_pointcloud, marking: true, clearing: false, min_obstacle_height: 0.0, max_obstacle_height: 0.15}
# The "marking" and "clearing" parameters determine whether the sensor will be used to add obstacle information to the costmap, clear obstacle information from the costmap, or do both.


