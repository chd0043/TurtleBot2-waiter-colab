#### Move base node parameters. ####
# The move_base package provides an implementation of an action (see the actionlib package) that, given a goal in the world, will attempt to reach it with a mobile base.
# Reference: http://www.ros.org/wiki/move_base

shutdown_costmaps: false        # Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state

controller_frequency: 5.0       # the rate in Hz at which to run the control loop and send velocity commands to the base.
controller_patience: 3.0        # How long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed.

planner_patience: 5.0           # How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed.
planner_frequency: 1.0          # rate in Hz at which to run the global planning loop. 
                                # If freq is set to 0.0, global planner only run when a new goal is received or the local planner reports that its path is blocked.

oscillation_timeout: 10.0       # How long in seconds to allow for oscillation before executing recovery behaviors. A value of 0.0 corresponds to an infinite timeout.
oscillation_distance: 0.2       # How far in meters the robot must move to be considered not to be oscillating. Moving this far resets the timer counting up to the ~oscillation_timeout

#base_global_planner: navfn/NavfnROS                            # The name of the plugin for the global planner to use with move_base (def: NavfnROS)
#base_local_planner: base_local_planner/TrajectoryPlannerROS    # The name of the plugin for the local planner to use with move_base (def: TrajectoryPlannerROS)
#recovery_behaviors: [{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery}, {name: rotate_recovery, type: rotate_recovery/RotateRecovery}, {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}] 

# carrot_planner/CarrotPlanner

shutdown_costmaps: true         # Determines whether or not to shutdown the costmaps of the node when move_base is in an inactive state
